@model DoorDelightsProject.Models.Restaurant

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutMenu.cshtml";
}

<h2>Edit</h2>
<style>
    .container {
        margin-left:30px;
    }
</style>
<p style="color:green;font-size:20px;"> @ViewBag.Notification</p>
@using (Html.BeginForm("Edit", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h2>Edit:@Model.RestaurantName</h2>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.RestaurantId)
    <div class="form-group">
        @Html.LabelFor(model => model.RestaurantName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RestaurantName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RestaurantName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RestaurantType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="form-control" id="RestaurantType" name="RestaurantType">
                <option>NorthIndian</option>
                <option>SouthIndian</option>
                <option>Andhra</option>
                <option>American</option>
                <option>Italian</option>
                <option>European</option>
                <option>Chinese</option>
                <option>Asian</option>
            </select>
            @Html.ValidationMessageFor(model => model.RestaurantType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RestaurantLocation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RestaurantLocation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RestaurantLocation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RestaurantRating, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RestaurantRating, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RestaurantRating, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DeliveryTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DeliveryTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DeliveryTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RestaurantImage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RestaurantImage, new { htmlAttributes = new { @class = "form-control" } })
            <input type="file" name="Imagefile" />
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Isclosed, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.CheckBoxFor(model => model.Isclosed, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Isclosed, "", new { @class = "text-danger" })
        </div>
        </div>
  
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Edit" class="btn btn-default" />
        </div>
    </div>
</div>
    }
<div>
    @Html.ActionLink("Back to List", "Menu")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

